#!/usr/bin/env sh

SCRIPTS_DIR=$(dirname "$0")
ROOT_DIR=$SCRIPTS_DIR/..
STORAGE_DIR=$ROOT_DIR/storage
MINIO_TMP_DIR=$STORAGE_DIR/minio-tmp

if [ -n "$("$SCRIPTS_DIR"/run dev ps -q)" ]; then
    MODE="dev"
elif [ -n "$("$SCRIPTS_DIR"/run prod ps -q)" ]; then
    MODE="prod"
else
    echo "Containers are not running"

    exit 1
fi

if [ -z "$1" ]; then
    echo "Specify the timestamp of the backup (e.g. 2020-05-13_21-35-00)"

    exit 1
fi

ABS_BACKUP_DIR=$(realpath "$STORAGE_DIR"/backups/"$1")
BACKUP_NAME=$(basename "$ABS_BACKUP_DIR".tar.gz)

if [ ! -f "$ABS_BACKUP_DIR".tar.gz ]; then
    echo "Backup file not found: $ABS_BACKUP_DIR.tar.gz"

    exit 1
fi

. "$ROOT_DIR"/.env

mkdir -p "$ABS_BACKUP_DIR"

tar -xzf "$ABS_BACKUP_DIR".tar.gz -C "$ABS_BACKUP_DIR"

rm -rf "$MINIO_TMP_DIR"/*
cp -r "$ABS_BACKUP_DIR"/files/* "$MINIO_TMP_DIR"

"$SCRIPTS_DIR"/"$MODE" exec minio mc alias set local http://minio:9000 "$MINIO_USER" "$MINIO_PASSWORD" > /dev/null
"$SCRIPTS_DIR"/"$MODE" exec minio mc rb --force local/files > /dev/null
"$SCRIPTS_DIR"/"$MODE" exec minio mc mb local/files > /dev/null
"$SCRIPTS_DIR"/"$MODE" exec minio mc anonymous set-json /minio/policy.json local/files > /dev/null
"$SCRIPTS_DIR"/"$MODE" exec minio mc mirror --overwrite /backup local/files > /dev/null

"$SCRIPTS_DIR"/"$MODE" exec postgres psql -U "$POSTGRES_USER" postgres -c "SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '$POSTGRES_DB' AND pid <> pg_backend_pid();" > /dev/null
"$SCRIPTS_DIR"/"$MODE" exec postgres psql -U "$POSTGRES_USER" postgres -c "DROP DATABASE IF EXISTS \"$POSTGRES_DB\"" > /dev/null
"$SCRIPTS_DIR"/"$MODE" exec postgres psql -U "$POSTGRES_USER" postgres -c "CREATE DATABASE \"$POSTGRES_DB\"" > /dev/null

cat "$ABS_BACKUP_DIR"/db.sql | "$SCRIPTS_DIR"/"$MODE" exec -T postgres psql -U "$POSTGRES_USER" "$POSTGRES_DB" > /dev/null

rm -rf "$ABS_BACKUP_DIR"

echo "Backup has been restored successfully: $BACKUP_NAME"

exit 0
