services:
    nginx:
        image: nginx:1.21.1-alpine
        restart: always
        environment:
            WEBSITE_PORT: ${WEBSITE_PORT}
        volumes:
            - ../nginx:/etc/nginx/templates
    web:
        build:
            context: ../../services/web
            args:
                NODE_IMAGE: node:16.8.0-alpine
        restart: always
    api:
        build:
            context: ../../services/api
            args:
                NODE_IMAGE: node:16.8.0-alpine
                POSTGRES_HOST: postgres
                POSTGRES_USER: ${POSTGRES_USER}
                POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
                POSTGRES_DB: ${POSTGRES_DB}
        restart: always
        environment:
            WEBSITE_DOMAIN: ${WEBSITE_DOMAIN}
            POSTGRES_HOST: postgres
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            JWT_SECRET: ${JWT_SECRET}
            MAILER_HOST: ${MAILER_HOST}
            MAILER_PORT: ${MAILER_PORT}
            MAILER_USER: ${MAILER_USER}
            MAILER_PASSWORD: ${MAILER_PASSWORD}
            MAILER_NAME: ${MAILER_NAME}
    postgres:
        image: postgres:13.4-alpine
        restart: always
        ports:
            - ${POSTGRES_PORT}:5432
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - ../../volumes/postgres:/var/lib/postgresql/data
    pgbackups:
        image: prodrigestivill/postgres-backup-local:14-alpine
        restart: always
        environment:
            POSTGRES_HOST: postgres
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            SCHEDULE: ${POSTGRES_BACKUPS_SCHEDULE}
        volumes:
            - ../../volumes/pgbackups:/backups
